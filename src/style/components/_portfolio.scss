@use "../utilities/colours";
@use "../utilities/variables";
@use "../mixins/pseudo";
@use "../mixins/hiddenTransition";
@use "../mixins/backgroundMask";
@forward "../utilities/classes";

div.portfolio-info-panel {
    z-index: -1;
    height: max-content;
    min-height: 100%;
    overflow: hidden;
    transition-property: opacity, visibility, transform;
    transition-duration: variables.$defaultTransitionDuration;
    transition-timing-function: variables.$defaultEasing;

    &:before,
    &:after {
        @include pseudo.pseudoMixinAbsolute(
                $left: 0,
                $bottom: 0,
                $top: unset,
                $height: 26.4rem
        );
    }

    &:before {
        z-index: -2;
        opacity: 0.25;
        background-color: var(--dark-blue-grey);
        -webkit-mask-image: url("navBgMask.svg");
        mask-image: url("navBgMask.svg");
        -webkit-mask-position: center bottom;
        mask-position: center bottom;
        -webkit-mask-size: 65px;
        mask-size: auto;
    }

    &:after {
        z-index: -1;
        background: radial-gradient(
                        ellipse farthest-side at bottom left,
                        transparent 0%,
                        var(--dark) 100%
        ) no-repeat bottom left;
        background-size: 100% 26.4rem;
    }

    &.left:after {
        background: radial-gradient(
                        ellipse farthest-side at bottom right,
                        transparent 0%,
                        var(--dark) 100%
        ) no-repeat bottom right;
    }
}

p.portfolio-info-panel-description {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

div.portfolio-masonry-item {
    transition-property: transform;
    transition-duration: variables.$defaultTransitionDuration;
    transition-timing-function: variables.$defaultEasing;

    &:hover,
    &.active {
        z-index: 1;
        transform: scale(1.05);

        &:not(.active) {
            div.portfolio-info-panel {
                @extend .shown;

                &.left {
                    transform: translateX(-100%);
                }

                &.right {
                    transform: translateX(100%);
                }
            }
        }
    }

    &.not-active {
        transform: scale(0.95);
    }

    div.portfolio-masonry-item-image-container {
        transition-property: transform;
        transition-duration: variables.$defaultTransitionDuration;
        transition-timing-function: variables.$defaultEasing;

        img {
            animation: fadeInUp 1s cubic-bezier(0.25, 1, 0.5, 1);
        }
    }
}

.portfolio-image-placeholder {
    z-index: 0;
    column-gap: 0.5rem;

    > div {
        width: 1rem;
        height: 1rem;
        animation: placeholderEllipsis variables.$placeholderEllipsisAnimationDuration infinite;
        border-radius: 50%;
        opacity: 0;
        background-color: var(--light);

        &:nth-of-type(2) {
            animation-delay: 0.25s;
        }

        &:nth-of-type(3) {
            animation-delay: 0.5s;
        }
    }
}

div.portfolio-info-panel-grid {
    grid-template-columns: auto 1fr;
    margin-bottom: 0.8rem;
    gap: 0.5rem;

    p {
        margin-bottom: 0;
    }
}

div.portfolio-lightbox {
    z-index: 10;
    grid-template-columns: 3fr 2fr;
    column-gap: 3rem;

    &,
    &:before,
    .portfolio-lightbox-content-container {
        transition-property: transform;
        transition-duration: variables.$defaultTransitionDuration;
        transition-timing-function: variables.$defaultEasing;
    }

    &:before,
    .portfolio-lightbox-content-container {
        transform: translateX(100%);
    }

    &:before {
        @include pseudo.pseudoMixinAbsolute($left: 0);
        background-color: var(--dark);
    }

    &.enter:not(.enter-active) {
        .portfolio-lightbox-image-container {
            transition-property: none !important;
        }
    }

    &.enter-active,
    &.enter-done {
        &:before,
        .portfolio-lightbox-content-container {
            transform: translateX(0%);
        }

        .portfolio-lightbox-image-container {
            transform: none !important;
        }
    }

    &:not(.enter-active, .enter-done) {
        .portfolio-lightbox-image-container {
        }
    }
}

.portfolio-lightbox-image-container {
    transition-property: transform;
    transition-duration: variables.$defaultTransitionDuration;
    transition-timing-function: variables.$defaultEasing;
}

/*
.portfolio-lightbox-thumbnails-container {
    position: relative;
    right: -1.5rem;
    grid-column: 1/2;
    align-items: end;
    justify-content: center;
    justify-self: end;
    margin: 3rem 0;

    > div {
        transition: width variables.$defaultTransitionDuration variables.$defaultEasing;
        box-shadow: 0.5rem 0.5rem 1rem rgba(map-get(colours.$colours, "light"), 0.15);
        background-color: var(--light);
        cursor: pointer;
        width: 5rem;
        aspect-ratio: 1;

        &:hover {
            width: 7rem;
        }
    }
}
*/

.portfolio-lightbox-content-back-text {
    z-index: -1;
    left: -15rem;
    width: max-content;
    opacity: 0.1;
    font-size: 20rem;
    line-height: 65%;
    background-blend-mode: lighten;
    mix-blend-mode: lighten;
}

.portfolio-lightbox-tag {
    margin: 0;
    rotate: 180deg;
    writing-mode: vertical-lr;
    text-orientation: sideways;
}

.portfolio-lightbox-stack-icon {
    position: relative;
    width: 4rem;
    height: 4rem;

    > div {
        @include pseudo.pseudoMixinAbsolute(
                $left: 50%,
                $bottom: 0,
                $top: unset,
                $width: auto,
                $height: auto
        );
        width: max-content;
        transform: translate(-50%, 125%);
        font-size: 1.5rem;
    }

    &:hover {
        > div {
            visibility: visible;
            opacity: 1;
        }
    }
}

.portfolio-lightbox-timeline {
    &:after {
        @include pseudo.pseudoMixinAbsolute(
                $width: 4rem,
                $left: 0,
                $height: 1.6rem
        );
        background: linear-gradient(180deg, var(--dark) 0%, transparent 100%);
    }
}

.portfolio-lightbox-timeline-grid {
    grid-template-columns: auto 1fr;

    > div {
        transition: transform variables.$defaultTransitionDuration variables.$defaultEasing;
    }
}

.portfolio-lightbox-timeline-item {
    &.active {
        .portfolio-lightbox-timeline-content {
            @include hiddenTransition.hiddenTransitionMixin;
            visibility: visible;
            opacity: 1;
        }
    }

    &.inactive {
        pointer-events: none;

        .portfolio-lightbox-timeline-content,
        .portfolio-lightbox-timeline-heading {
            visibility: hidden;
            opacity: 0;
        }
    }

    .portfolio-lightbox-timeline-heading {
        min-height: 5.5rem;
    }

    .portfolio-lightbox-timeline-button {
        width: 4rem;
        height: 4rem;
    }
}

.portfolio-lightbox-timeline-segment {
    height: 5.5rem;

    &:before {
        //dot
        @include pseudo.pseudoMixin($width: 1rem, $height: 1rem, $top: 1.8rem);
        flex-shrink: 0;
        margin-right: 1.5rem;
        margin-left: 1.5rem;
        transition-property: transform;
        transition-duration: variables.$defaultTransitionDuration;
        transition-timing-function: variables.$defaultEasing;
        border-radius: 50%;
        background-color: var(--light);
    }

    &:after {
        //line
        @include pseudo.pseudoMixinAbsolute(
                $width: 0.2rem,
                $height: 100%,
                $top: 0,
                $left: 1.9rem
        );
        flex-shrink: 0;
        transform: translateX(-50%);
        background-color: var(--light);
    }

    &:first-child:after {
        top: 1.8rem;
        height: calc(100% - 1.8rem);
    }

    &:last-child:after {
        height: 1.8rem;
    }

    &:only-child:after {
        display: none;
    }

    &.active {
        &:before {
            transform: scale(1.5);
        }
    }
}

.portfolio-lightbox-timeline-content {
    @include hiddenTransition.hiddenTransitionMixin;
    visibility: hidden;
    opacity: 0;
}
