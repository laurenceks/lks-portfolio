@use "variables";

@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@300;400;500&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700&family=REM:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,500;1,600;1,700;1,800;1,900&display=swap');

$styles: (
        "h1":(
                "sm": "h2",
                "style": (
                        font-size: 6rem,
                )
        ),
        "h2":(
                "sm": "h3",
                "style": (
                        font-size: 5rem,
                )
        ),
        "h3":(
                "sm": "h4",
                "style": (
                        font-size: 3.6rem,
                )
        ),
        "h4":(
                "sm": "h4",
                "style": (
                        font-size: 3.2rem,
                )
        ),
        "h5":(
                "sm": "h4",
                "style": (
                        font-size: 2.4rem,
                )
        ),
        "h6":(
                "style": (
                        font-size: 2.2rem,
                )
        ),
        "p":(
                "style": (
                        font-size: 1.8rem,
                        line-height: 1.6rem,
                        font-family: var(--font-body),
                        margin-bottom: 0.75em
                )
        ),
);

:root {
  font-size: 62.5%;
  --font-headings: "Open Sans", sans-serif;
  --font-body: "REM", sans-serif;
  --font-code: "Inconsolata", monospace;
  --font-buttons: var(--font-body);
}

body {
  font-family: var(--font-body);
}

.ff-code {
  font-family: var(--font-code);
}

.ff-headings {
  font-family: var(--font-headings);
}

.ff-body {
  font-family: var(--font-body-code);
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-headings);
}

@each $label, $style in $styles {
  #{$label} {
    $propertyMap: map-get($style, "style");
    @each $key, $value in $propertyMap {
      line-height: 1.4em;
      #{$key}: #{$value};
      @if not (map-has-key($propertyMap, "margin-bottom")) {
        margin-bottom: 0.5em;
      }
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

@each $breakpointLabel, $breakPointValue in variables.$breakpoints {
  @media screen and (max-width: $breakPointValue) {
    @each $label, $style in $styles {
      @if (map-has-key($style, $breakpointLabel)) {
        #{$label} {
          @each $key, $value in map-get(map-get($styles, map-get($style, $breakpointLabel)), "style") {
            #{$key}: #{$value};
          }
        }
      }
    }
  }
}