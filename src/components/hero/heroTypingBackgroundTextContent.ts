const heroTypingBackgroundTextContent: string =
    'import React from "react";\nimport ReactDOM from "react-dom/client";\nimport App from "./App.tsx";\nimport "./index.css";\n\nReactDOM.createRoot(document.getElementById("root")!).render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\nimport "./style/main.scss";\nimport Hero from "./components/hero/Hero.tsx";\nimport Nav from "./components/nav/Nav.tsx";\n\nfunction App() {\n    return (\n        <>\n            <header></header>\n            <main>\n                <Hero />\n                <Nav />\n            </main>\n            <footer></footer>\n        </>\n    );\n}\n\nexport default App;\nimport { useCallback } from "react";\r\nimport { Container, Engine } from "tsparticles-engine";\r\nimport { loadSlim } from "tsparticles-slim";\r\nimport Particles from "react-particles";\r\n\r\nconst ParticleBar = () => {\r\n    const particlesInit = useCallback(async (engine: Engine) => {\r\n        console.log(engine);\r\n\r\n        // you can initialize the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it\'s the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        // await loadFull(engine);\r\n        await loadSlim(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(\r\n        async (container: Container | undefined) => {\r\n            await console.log(container);\r\n        },\r\n        []\r\n    );\r\n    return (\r\n        <Particles\r\n            id="tsparticles"\r\n            init={particlesInit}\r\n            loaded={particlesLoaded}\r\n            options={{\r\n                background: {\r\n                    color: {\r\n                        value: "#0c0c0c",\r\n                    },\r\n                },\r\n                fpsLimit: 120,\r\n                interactivity: {\r\n                    events: {\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: "push",\r\n                        },\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: "repulse",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        push: {\r\n                            quantity: 4,\r\n                        },\r\n                        repulse: {\r\n                            distance: 200,\r\n                            duration: 0.4,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: "#788AA3",\r\n                    },\r\n                    links: {\r\n                        color: "#788AA3",\r\n                        distance: 150,\r\n                        enable: true,\r\n                        opacity: 0.5,\r\n                        width: 1,\r\n                    },\r\n                    move: {\r\n                        direction: "none",\r\n                        enable: true,\r\n                        outModes: {\r\n                            default: "bounce",\r\n                        },\r\n                        random: false,\r\n                        speed: 1,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: true,\r\n                            area: 800,\r\n                        },\r\n                        value: 80,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                    },\r\n                    shape: {\r\n                        type: "circle",\r\n                    },\r\n                    size: {\r\n                        value: { min: 1, max: 5 },\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ParticleBar;\r\nimport { useCallback } from "react";\r\nimport { Container, Engine } from "tsparticles-engine";\r\nimport { loadSlim } from "tsparticles-slim";\r\nimport Particles from "react-particles";\r\n\r\nconst ParticleBar = () => {\r\n    const particlesInit = useCallback(async (engine: Engine) => {\r\n        console.log(engine);\r\n\r\n        // you can initialize the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it\'s the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        // await loadFull(engine);\r\n        await loadSlim(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(\r\n        async (container: Container | undefined) => {\r\n            await console.log(container);\r\n        },\r\n        []\r\n    );\r\n    return (\r\n        <div className={"hero-particles-background"}>\r\n            <Particles\r\n                init={particlesInit}\r\n                loaded={particlesLoaded}\r\n                options={{\r\n                    fullScreen: {\r\n                        enable: false,\r\n                        zIndex: 0,\r\n                    },\r\n                    background: {\r\n                        color: {\r\n                            value: "#0c0c0c",\r\n                        },\r\n                    },\r\n                    fpsLimit: 120,\r\n                    interactivity: {\r\n                        events: {\r\n                            onClick: {\r\n                                enable: true,\r\n                                mode: "repulse",\r\n                            },\r\n                            onHover: {\r\n                                enable: true,\r\n                                mode: "attract",\r\n                            },\r\n                            resize: true,\r\n                        },\r\n                        modes: {\r\n                            repulse: {\r\n                                distance: 200,\r\n                                duration: 3,\r\n                            },\r\n                            attract: {\r\n                                distance: 100,\r\n                                duration: 3,\r\n                            },\r\n                        },\r\n                    },\r\n                    particles: {\r\n                        color: {\r\n                            value: "#788AA3",\r\n                        },\r\n                        links: {\r\n                            color: "#788AA3",\r\n                            distance: 150,\r\n                            enable: true,\r\n                            opacity: 0.1,\r\n                            width: 1,\r\n                        },\r\n                        move: {\r\n                            direction: "none",\r\n                            enable: true,\r\n                            outModes: {\r\n                                default: "bounce",\r\n                            },\r\n                            random: false,\r\n                            speed: 0.2,\r\n                            straight: false,\r\n                        },\r\n                        number: {\r\n                            density: {\r\n                                enable: true,\r\n                                area: 1000,\r\n                            },\r\n                            value: 80,\r\n                        },\r\n                        opacity: {\r\n                            value: 0.25,\r\n                        },\r\n                        shape: {\r\n                            type: "circle",\r\n                        },\r\n                        size: {\r\n                            value: { min: 1, max: 5 },\r\n                        },\r\n                    },\r\n                    detectRetina: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParticleBar;\r\nconst Nav = () => (\n    <nav>\n        <div>Home</div>\n        <div>Portfolio</div>\n        <div>About</div>\n        <div>Contact</div>\n    </nav>\n);\n\nexport default Nav;\nconst TypingHeroBracketSVG = () => {\r\n    return (\r\n        <svg viewBox={"0 0 228 455"}>\r\n            <path fill={"#ffffff"} d={"M 54.5 226.1 C 97.7 205.2 184.7 163.3 228 142.4 L 228 97 C 171.2 126 56.8 184.3 0 213.3 L 0 241.7 C 56.8 270.7 171.2 329 228 358 L 228 312.6 C 184.8 291.7 97.8 249.7 54.5 228.9 L 54.5 226.1 Z"}>\r\n                <animate\r\n                    id={"first"}\r\n                    begin={"indefinite"}\r\n                    attributeName={"d"}\r\n                    fill={"freeze"}\r\n                    from={"M 54.5 226.1 C 97.7 205.2 184.7 163.3 228 142.4 L 228 97 C 171.2 126 56.8 184.3 0 213.3 L 0 241.7 C 56.8 270.7 171.2 329 228 358 L 228 312.6 C 184.8 291.7 97.8 249.7 54.5 228.9 L 54.5 226.1 Z"}\r\n                    to={"M 41.9 224.9 C 149.1 214.2 32.5 32.4 145.6 34.9 L 145.6 0 C -29.5 -1.9 123.5 211.2 0 206.2 L 0 248.9 C 123.5 243.9 -29.5 457 145.6 455.1 L 145.6 420.3 C 32.5 422.8 149.1 241 41.9 230.3 L 41.9 224.9 Z"}\r\n                    dur={"0.4s"}/>\r\n                <animate\r\n                    id={"second"}\r\n                    begin={"indefinite"}\r\n                    attributeName={"d"}\r\n                    fill={"freeze"}\r\n                    from={"M 41.9 230.3 C 149.1 241 32.5 422.8 145.6 420.3 L 145.6 455.1 C -29.5 457 123.5 243.9 0 248.9 L 0 206.2 C 123.5 211.2 -29.5 -1.9 145.6 0 L 145.6 34.9 C 32.5 32.4 149.1 214.2 41.9 224.9 L 41.9 224.9 L 41.9 230.3"}\r\n                    to={"M 40.1 420.2 C 62.067 420.2 84.033 420.2 106 420.2 L 106 455 C 70.667 455 35.333 455 0 455 L 0 0 C 35.333 0 70.667 0 106 0 L 106 34.8 C 84.033 34.8 62.067 34.8 40.1 34.8 L 40.1 420.2 L 40.1 420.2"}\r\n                    dur={"0.4s"}/>\r\n                <animate\r\n                    id={"third"}\r\n                    begin={"indefinite"}\r\n                    attributeName={"d"}\r\n                    fill={"freeze"}\r\n                    from={"M 40.1 34.8 C 62.067 34.8 84.033 34.8 106 34.8 L 106 0 C 70.667 0 35.333 0 0 0 L 0 455 C 35.333 455 70.667 455 106 455 L 106 420.2 C 84.033 420.2 62.067 420.2 40.1 420.2 L 40.1 420.2 L 40.1 34.8"}\r\n                    to={"M 54.5 226.1 C 97.7 205.2 184.7 163.3 228 142.4 L 228 97 C 171.2 126 56.8 184.3 0 213.3 L 0 241.7 C 56.8 270.7 171.2 329 228 358 L 228 312.6 C 184.8 291.7 97.8 249.7 54.5 228.9 L 54.5 226.1 L 54.5 226.1"}\r\n                    dur={"0.4s"}/>\r\n            </path>\r\n        </svg>\r\n    );\r\n};\r\nexport default TypingHeroBracketSVG;\r\nimport { TypeAnimation } from "react-type-animation";\r\nimport heroConfig from "./heroConfig.ts";\r\nimport { TypingHeroInterface } from "../../types/heroTypes.ts";\r\n\r\nconst HeroTypingOpenTag = ({ nextHeroTypingStage }: TypingHeroInterface) => (\r\n    <TypeAnimation\r\n        sequence={["<hello> ", 1000, () => nextHeroTypingStage()]}\r\n        {...heroConfig}\r\n    />\r\n);\r\nexport default HeroTypingOpenTag;\r\nimport { TypeAnimation } from "react-type-animation";\r\nimport heroConfig from "./heroConfig.ts";\r\n\r\nconst HeroTypingTagClose = () => (\r\n    <TypeAnimation sequence={["</hello>"]} {...heroConfig} cursor={false} />\r\n);\r\nexport default HeroTypingTagClose;\r\nimport { TypeAnimation } from "react-type-animation";\r\nimport heroConfig from "./heroConfig.ts";\r\nimport { TypingHeroInterface } from "../../types/heroTypes.ts";\r\n\r\nconst HeroTypingBodyOpen = ({ nextHeroTypingStage }: TypingHeroInterface) => (\r\n    <TypeAnimation sequence={["", 2000, nextHeroTypingStage]} {...heroConfig} />\r\n);\r\nexport default HeroTypingBodyOpen;\r\nimport { TypeAnimation } from "react-type-animation";\r\nimport heroConfig from "./heroConfig.ts";\r\n\r\nconst HeroTypingBody = () => (\r\n    <TypeAnimation\r\n        sequence={[\r\n            "I\'m Laurence and I make websites",\r\n            2000,\r\n            "I\'m Laurence and I innovate solutions",\r\n            2000,\r\n            "I\'m Laurence and I build what you need",\r\n            2000,\r\n        ]}\r\n        {...heroConfig}\r\n        repeat={Infinity}\r\n    />\r\n);\r\nexport default HeroTypingBody;\r\nimport { useState } from "react";\r\nimport HeroStageOne from "./stages/HeroStageOne.tsx";\r\nimport HeroStageTwo from "./stages/HeroStageTwo.tsx";\r\nimport HeroBackground from "./HeroBackground.tsx";\r\nimport HeroHidden from "./HeroHidden.tsx";\r\nimport HeroStageThree from "./stages/HeroStageThree.tsx";\r\n\r\nconst HeroTyping = () => {\r\n    const [heroTypingStage, setHeroTypingStage] = useState(0);\r\n\r\n    const nextHeroTypingStage = () => {\r\n        setHeroTypingStage((currentStage) => currentStage + 1);\r\n    };\r\n\r\n    const stageElements = [\r\n        <HeroStageOne nextHeroTypingStage={nextHeroTypingStage} />,\r\n        <HeroStageTwo nextHeroTypingStage={nextHeroTypingStage} />,\r\n        <HeroStageThree />,\r\n    ];\r\n\r\n    return (\r\n        <div className={"hero"}>\r\n            <div className={"hero-typing"}>\r\n                {stageElements[heroTypingStage]}\r\n                <HeroHidden />\r\n                <HeroBackground />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default HeroTyping;\r\nconst HeroHidden = () => (\r\n    <div className={"hidden"}>\r\n        <p className={"hero-tag"}>{`<hello>`}</p>\r\n        <p className={"hero-main"}>I\'m Laurence and I build solutions</p>\r\n        <p className={"hero-tag"}>{`</hello>`}</p>\r\n    </div>\r\n);\r\nexport default HeroHidden;\r\nimport HeroTyping from "./HeroTyping.tsx";\r\n\r\nconst HeroContent = () => (\r\n    <div className={"hero"}>\r\n        <HeroTyping />\r\n    </div>\r\n);\r\nexport default HeroContent;\r\nimport { TypeAnimation } from "react-type-animation";\r\nimport heroConfig from "./heroConfig.ts";\r\n\r\nconst HeroBackground = () => (\r\n    <TypeAnimation\r\n        sequence={[\r\n            `import { useState } from "react";\r\nimport HeroStageOne from "./stages/HeroStageOne.tsx";\r\nimport HeroStageTwo from "./stages/HeroStageTwo.tsx";\r\nimport HeroBackground from "./HeroBackground.tsx";\r\n\r\nconst HeroContent = () => {\r\n\\tconst [heroStage, setHeroStage] = useState(0);\r\n\r\n\\tconst nextHeroStage = () => {\r\n\\t\\tsetHeroStage(2);\r\n\\t};\r\n\r\n\\treturn (\r\n\\t\\t<div className={"hero-typing"}>\r\n\\t\\t\\t{heroStage === 0 ? (\r\n\\t\\t\\t\\t<HeroStageOne nextHeroStage={nextHeroStage} />\r\n\\t\\t\\t) : (\r\n\\t\\t\\t\\t<HeroStageTwo />\r\n\\t\\t\\t)}\r\n\\t\\t\\t<div className={"hidden"}>\r\n\\t\\t\\t\\t<p className={"hero-tag"}>{\\`<hello>\\`}</p>\r\n\\t\\t\\t\\t<p className={"hero-main"}>\r\n\\t\\t\\t\\t\\tI\'m Laurence and I build solutions\r\n\\t\\t\\t\\t</p>\r\n\\t\\t\\t\\t<p className={"hero-tag"}>{\\`</hello>\\`}</p>\r\n\\t\\t\\t</div>\r\n\\t\\t\\t<HeroBackground />\r\n\\t\\t</div>\r\n\\t);\r\n};\r\nexport default HeroContent;\r\n`,\r\n        ]}\r\n        {...heroConfig}\r\n        wrapper={"div"}\r\n        className={"hero-typing-background"}\r\n    />\r\n);\r\nexport default HeroBackground;\r\nimport HeroContent from "./HeroContent.tsx";\r\nimport ParticleBackground from "../particles/ParticleBackground.tsx";\r\n\r\nconst Hero = () => (\r\n    <section id="hero" className={"hero"}>\r\n        <HeroContent />\r\n        <ParticleBackground />\r\n    </section>\r\n);\r\nexport default Hero;\r\nimport HeroTypingBodyOpen from "../HeroTypingBodyOpen.tsx";\r\nimport { TypingHeroStartProps } from "../../../types/heroTypes.ts";\r\n\r\nconst HeroStageTwo = ({ nextHeroTypingStage }: TypingHeroStartProps) => (\r\n    <div>\r\n        <p className={"hero-tag"}>{"<hello> "}</p>\r\n        <p className={"hero-main"}>\r\n            <HeroTypingBodyOpen nextHeroTypingStage={nextHeroTypingStage} />\r\n        </p>\r\n        <p className={"hero-tag"}>{"</hello>"}</p>\r\n    </div>\r\n);\r\n\r\nexport default HeroStageTwo;\r\nimport HeroTypingBody from "../HeroTypingBody.tsx";\r\n\r\nconst HeroStageTwo = () => (\r\n    <div>\r\n        <p className={"hero-tag"}>{"<hello> "}</p>\r\n        <p className={"hero-main"}>\r\n            <HeroTypingBody />\r\n        </p>\r\n        <p className={"hero-tag"}>{"</hello>"}</p>\r\n    </div>\r\n);\r\n\r\nexport default HeroStageTwo;\r\nimport HeroTypingOpenTag from "../HeroTypingTagOpen.tsx";\r\nimport HeroTypingTagClose from "../HeroTypingTagClose.tsx";\r\nimport { TypingHeroStartProps } from "../../../types/heroTypes.ts";\r\n\r\nconst HeroStageOne = ({ nextHeroTypingStage }: TypingHeroStartProps) => (\r\n    <div>\r\n        <p className="hero-tag">\r\n            <HeroTypingOpenTag nextHeroTypingStage={nextHeroTypingStage} />\r\n        </p>\r\n        <p className="hero-tag">\r\n            <HeroTypingTagClose />\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport default HeroStageOne;\r\n// import { ReactNode } from "react";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst Window = ({ headerText, children }: any) => (\r\n    <div className={"window"}>\r\n        <div className={"window-header"}>{headerText}</div>\r\n        <div className={"window-icons"}></div>\r\n        <div className={"window-content"}>{children}</div>\r\n    </div>\r\n);\r\nexport default Window;\r\n';
export default heroTypingBackgroundTextContent;
